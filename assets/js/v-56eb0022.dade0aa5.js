"use strict";(self.webpackChunkhd996_github_io=self.webpackChunkhd996_github_io||[]).push([[106],{991:(e,o,t)=>{t.r(o),t.d(o,{data:()=>l});const l={key:"v-56eb0022",path:"/tech/security/",title:"安全",lang:"zh-CN",frontmatter:{title:"安全",description:"安全",date:"2021-12-13T00:00:00.000Z"},excerpt:"",headers:[{level:2,title:"前端安全",slug:"前端安全",children:[]}],filePathRelative:"tech/security/README.md",git:{updatedTime:1644827003e3,contributors:[{name:"hd996",email:"houdong111@gmail.com",commits:1}]}}},187:(e,o,t)=>{t.r(o),t.d(o,{default:()=>F});var l=t(866);const c=(0,l._)("h2",{id:"前端安全",tabindex:"-1"},[(0,l._)("a",{class:"header-anchor",href:"#前端安全","aria-hidden":"true"},"#"),(0,l.Uk)(" 前端安全")],-1),r=(0,l._)("p",null,[(0,l.Uk)("前不久，我们公司安全团队报告了一些 "),(0,l._)("code",null,"Web"),(0,l.Uk)(" 安全漏洞，我简单整理了一下，具体的每一项的细节可以查看链接。")],-1),n={href:"https://developer.mozilla.org/zh-CN/docs/Web/HTTP/CSP",target:"_blank",rel:"noopener noreferrer"},d=(0,l.Uk)("CSP"),i=(0,l.Uk)("：内容安全策略 "),a=(0,l._)("code",null,"Content-Security-Policy",-1),p=(0,l.Uk)("，其实简单来说，"),u=(0,l._)("code",null,"CSP",-1),s=(0,l.Uk)(" 就是一个白名单机制，可以配置允许加载哪些域的资源，可以通过 "),h=(0,l._)("code",null,"Http 头",-1),_=(0,l.Uk)(" 或 "),k=(0,l._)("code",null,"<meta> 标签",-1),m=(0,l.Uk)(" 的方式来设置。"),f={href:"https://zh.wikipedia.org/wiki/HTTP%E4%B8%A5%E6%A0%BC%E4%BC%A0%E8%BE%93%E5%AE%89%E5%85%A8",target:"_blank",rel:"noopener noreferrer"},U=(0,l.Uk)("HSTS"),b=(0,l.uE)("：<code>Http</code> 严格传输安全 <code>Http-Strict-Transport-Security</code>，作用是强制浏览器使用 <code>Https</code> 与服务器创建连接。如 <code>strict-transport-security: max-age=3153600</code> ，表示在接下来的 <code>3153600s</code>（即一年）中，浏览器向 <code>example.com</code> 或其子域名发送 <code>http</code> 请求时，必须采用 <code>https</code> 来连接，如果用户点击超链接或者地址栏输入 <code>http://example.com</code> ，浏览器应当自动将 <code>http</code> 转写为 <code>https</code> ，然后向 <code>https://example.com</code> 发起请求。",25),g={href:"https://developer.mozilla.org/zh-CN/docs/Web/HTTP/Headers/X-Frame-Options",target:"_blank",rel:"noopener noreferrer"},C=(0,l.Uk)("X-Frame-Options"),T=(0,l.Uk)("：响应头表示是否允许（或允许哪些）在 "),E=(0,l._)("code",null,"<iframe>",-1),y=(0,l.Uk)(" ，"),H=(0,l._)("code",null,"<frame>",-1),v=(0,l.Uk)(" ，"),P=(0,l._)("code",null,"<embed>",-1),S=(0,l.Uk)("， "),z=(0,l._)("code",null,"<object>",-1),W=(0,l.Uk)(" 等标签中引入，这样的话可以确保自己的网站没有被第三方网站偷偷引入，从而避免了点击劫持。其实我用的比较多的是加百度统计的白名单，热力图功能需要使用 "),x=(0,l._)("code",null,"iframe",-1),M=(0,l.Uk)(" 嵌套。"),O={href:"https://developer.mozilla.org/zh-CN/docs/Web/HTTP/Headers/X-Content-Type-Options",target:"_blank",rel:"noopener noreferrer"},A=(0,l.Uk)("X-Content-Type-Options"),w=(0,l.Uk)("：防止服务器响应标记的 "),X=(0,l._)("code",null,"Content-Type",-1),B=(0,l.Uk)(" 标记头被篡改。比如设置 "),N=(0,l._)("code",null,"X-Content-Type-Options: nosniff",-1),I=(0,l.Uk)(" ，那么下面2种情况的请求会被阻止"),Z=(0,l.uE)("<ul><li>请求类型是 <code>style</code> ，但 <code>MIME</code> 类型不是 <code>text/css</code></li><li>请求类型是 <code>script</code>，但 <code>MIME</code> 类型不是 <code>JavaScript MIME</code> 类型</li></ul>",1),D={},F=(0,t(553).Z)(D,[["render",function(e,o){const t=(0,l.up)("OutboundLink");return(0,l.wg)(),(0,l.iD)(l.HY,null,[c,r,(0,l._)("ul",null,[(0,l._)("li",null,[(0,l._)("p",null,[(0,l._)("a",n,[d,(0,l.Wm)(t)]),i,a,p,u,s,h,_,k,m])]),(0,l._)("li",null,[(0,l._)("p",null,[(0,l._)("a",f,[U,(0,l.Wm)(t)]),b])]),(0,l._)("li",null,[(0,l._)("p",null,[(0,l._)("a",g,[C,(0,l.Wm)(t)]),T,E,y,H,v,P,S,z,W,x,M])]),(0,l._)("li",null,[(0,l._)("p",null,[(0,l._)("a",O,[A,(0,l.Wm)(t)]),w,X,B,N,I]),Z])])],64)}]])},553:(e,o)=>{o.Z=(e,o)=>{const t=e.__vccOpts||e;for(const[e,l]of o)t[e]=l;return t}}}]);